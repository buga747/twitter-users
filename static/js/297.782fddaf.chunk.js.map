{"version":3,"file":"static/js/297.782fddaf.chunk.js","mappings":"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","sources":["services/TweetsApi.js","components/BackButton/BackButton.styled.jsx","components/BackButton/BackButton.jsx","components/UsersListItem/UserListItem.styled.jsx","components/UsersListItem/UsersListItem.jsx","utils/addCommasToNumber.js","components/UsersList/UsersList.styled.jsx","components/UsersList/UsersList.jsx","components/Skeleton/Skeleton.styled.jsx","components/Skeleton/Skeleton.jsx","pages/Tweets.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://64419945fadc69b8e087e3ed.mockapi.io';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getUsers() {\n  const response = await axios.get(`/users`);\n  return response.data;\n}\n\nexport async function updateUser(user) {\n  const response = await axios.put(`/users/${user.id}`, user);\n  return response.data;\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BackButtonStyled = styled(Link)`\n  background-color: #007bff;\n  color: #fff;\n  padding: 10px 20px;\n  border-radius: 5px;\n  text-decoration: none;\n  display: inline-block;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BackButtonStyled } from './BackButton.styled';\n\nexport function BackButton({ text }) {\n  return <BackButtonStyled to=\"/\">{text}</BackButtonStyled>;\n}\n\nBackButton.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  position: relative;\n  width: 380px;\n  height: 460px;\n  background-image: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n\n  text-align: center;\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 36px;\n  padding-left: 36px;\n  padding-right: 36px;\n  padding-top: 28px;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    background-color: #ebd8ff;\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n      inset 0px -1.71846px 3.43693px #ae7be3,\n      inset 0px 3.43693px 2.5777px #fbf8ff;\n    height: 8px;\n    z-index: 0;\n    width: 380px;\n  }\n`;\n\nexport const Logo = styled.img`\n  position: absolute;\n  left: 20px;\n  top: 20px;\n`;\n\nexport const AvatarWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 80px;\n  height: 80px;\n  background-color: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 8px solid #ebd8ff;\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-top: 88px;\n  margin-bottom: 26px;\n`;\n\nexport const InfoText = styled.p`\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n\n  color: #ebd8ff;\n`;\n\nexport const FollowButton = styled.button`\n  padding: 14px 28px;\n  width: 196px;\n  height: 50px;\n  background-color: ${({ isFollowing }) =>\n    isFollowing ? '#5CD3A8' : '#EBD8FF'};\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  border: 0;\n  color: #373737;\n  transition: transform 0.3s ease-in-out;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AvatarWrapper,\n  FollowButton,\n  InfoText,\n  InfoWrapper,\n  Item,\n  Logo,\n} from './UserListItem.styled';\nimport logo from '../../assets/images/logo.png';\nimport image from '../../assets/images/bg-img.png';\nimport { updateUser } from 'services/TweetsApi';\nimport { addCommasToNumber } from 'utils/addCommasToNumber';\nimport { TailSpin } from 'react-loader-spinner';\n\nexport function UsersListItem({ twiUser }) {\n  const [twitterUser, setTwitterUser] = useState(twiUser);\n  const { followers, user, tweets, avatar, isFollowed } = twitterUser;\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const followersString = addCommasToNumber(followers);\n\n  const handleFollowClick = async () => {\n    const updatedUser = {\n      ...twitterUser,\n      followers: isFollowed ? followers - 1 : followers + 1,\n      isFollowed: !isFollowed,\n    };\n    setIsLoading(true);\n    try {\n      await updateUser(updatedUser);\n      setTwitterUser(updatedUser);\n    } catch (e) {\n      setError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Item>\n      <Logo src={logo} alt=\"logo\" width=\"76\" />\n      <img src={image} alt=\"bg-img\" width=\"308\" />\n      <AvatarWrapper>\n        <img src={avatar} alt={user} width=\"62\" />\n      </AvatarWrapper>\n      <InfoWrapper>\n        <InfoText> {tweets} tweets</InfoText>\n        <InfoText> {followersString} followers</InfoText>\n      </InfoWrapper>\n      <FollowButton\n        type=\"button\"\n        disabled={isLoading}\n        name=\"follow\"\n        onClick={handleFollowClick}\n        isFollowing={isFollowed}\n      >\n        {isLoading ? (\n          <TailSpin\n            height={24}\n            width={24}\n            color=\"#110202\"\n            visible={true}\n            ariaLabel=\"oval-loading\"\n            secondaryColor=\"#3b763a\"\n            strokeWidth={2}\n            strokeWidthSecondary={2}\n          />\n        ) : (\n          <> {error ? 'Error' : isFollowed ? 'Following' : 'Follow'}</>\n        )}\n      </FollowButton>\n    </Item>\n  );\n}\n\nUsersListItem.propTypes = {\n  twiUser: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    followers: PropTypes.number.isRequired,\n    user: PropTypes.string.isRequired,\n    tweets: PropTypes.number.isRequired,\n    avatar: PropTypes.string.isRequired,\n    isFollowed: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","export function addCommasToNumber(number) {\n  const numString = number.toString();\n  let numArray = numString.split('');\n  numArray.reverse();\n  for (let i = 3; i < numArray.length; i += 3) {\n    numArray[i] += ',';\n  }\n  const formattedNum = numArray.reverse().join('');\n  return formattedNum;\n}\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n  margin-bottom: 20px;\n  margin-top: 30px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const LoadMoreBtnStyled = styled.button`\n  display: block;\n  background-color: #007bff;\n  color: #fff;\n  padding: 10px 20px;\n  border-radius: 5px;\n  text-decoration: none;\n  display: inline-block;\n  border: 0;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n","import { UsersListItem } from 'components/UsersListItem/UsersListItem';\nimport React, { useEffect, useState } from 'react';\nimport { List, LoadMoreBtnStyled, Wrapper } from './UsersList.styled';\nimport PropTypes from 'prop-types';\n\nexport function UsersList({ users }) {\n  const [usersToShow, setUsersToShow] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showLoadMore, setShowLoadMore] = useState(true);\n\n  useEffect(() => {\n    setUsersToShow(users.slice(0, 3));\n  }, [users]);\n\n  const handleLoadMore = () => {\n    setLoading(true);\n    const currentUsersToShow = usersToShow.slice();\n    const nextUsers = users.slice(\n      currentUsersToShow.length,\n      currentUsersToShow.length + 3\n    );\n    setUsersToShow([...currentUsersToShow, ...nextUsers]);\n    setLoading(false);\n    if (usersToShow.length + 3 >= users.length) {\n      setShowLoadMore(false);\n    }\n  };\n\n  return (\n    <Wrapper>\n      {usersToShow && (\n        <List>\n          {usersToShow.map(user => (\n            <UsersListItem key={user.id} twiUser={user} />\n          ))}\n        </List>\n      )}\n      {showLoadMore && (\n        <LoadMoreBtnStyled onClick={handleLoadMore} disabled={loading}>\n          {loading ? 'Loading...' : 'Load more users'}{' '}\n        </LoadMoreBtnStyled>\n      )}\n    </Wrapper>\n  );\n}\n\nUsersList.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  margin-top: 30px;\n`;\n\nexport const Item = styled.div`\n  position: relative;\n  width: 380px;\n  height: 460px;\n  background-color: #ccc;\n  text-align: center;\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 36px;\n  padding-left: 36px;\n  padding-right: 36px;\n  padding-top: 28px;\n`;\n","import React from 'react';\nimport { Item, Wrapper } from './Skeleton.styled';\n\nconst Skeleton = ({ count = 3 }) => {\n  const items = [];\n\n  for (let i = 0; i < count; i++) {\n    items.push(<Item key={i} />);\n  }\n\n  return <Wrapper>{items}</Wrapper>;\n};\n\nexport default Skeleton;\n","import { useEffect, useState } from 'react';\nimport { getUsers } from 'services/TweetsApi';\nimport { BackButton } from 'components/BackButton/BackButton';\nimport { UsersList } from 'components/UsersList/UsersList';\nimport Skeleton from 'components/Skeleton/Skeleton';\n\n// const statusFilters = {\n//   all: 'all',\n//   followed: 'followed',\n//   notFollowed: 'notFollowed',\n// };\n\nconst Tweets = () => {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [showSkeleton, setShowSkeleton] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        setShowSkeleton(true);\n        const users = await getUsers();\n        setUsers(users);\n      } catch (e) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n        setShowSkeleton(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <BackButton text=\"Back to Home\" />{' '}\n      {error && 'Error, please reload the page'}\n      {isLoading || showSkeleton ? <Skeleton /> : <UsersList users={users} />}\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["getUsers","axios","response","data","updateUser","user","id","BackButtonStyled","styled","Link","BackButton","text","to","Item","Logo","AvatarWrapper","InfoWrapper","InfoText","FollowButton","isFollowing","UsersListItem","twiUser","useState","twitterUser","setTwitterUser","followers","tweets","avatar","isFollowed","isLoading","setIsLoading","error","setError","followersString","number","numArray","toString","split","reverse","i","length","join","addCommasToNumber","handleFollowClick","updatedUser","src","alt","width","image","type","disabled","name","onClick","height","color","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","Wrapper","List","LoadMoreBtnStyled","UsersList","users","usersToShow","setUsersToShow","loading","setLoading","showLoadMore","setShowLoadMore","useEffect","slice","map","currentUsersToShow","nextUsers","count","items","push","setUsers","showSkeleton","setShowSkeleton","fetchData"],"sourceRoot":""}